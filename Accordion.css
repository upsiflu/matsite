:root {
  --unit: 3rem;
  --column: calc(var(--unit) * 7);
}

.Accordion {
  --w: var(--unit);
  --h: var(--column);

  /* heights */
  --northHeight: calc(var(--w) * var(--north-units));
  --hereHeight: calc(100vh - 4rem);
  --southHeight: calc(var(--w) * var(--south-units));
  --height: max(
    calc(var(--northHeight) + var(--hereHeight) + var(--southHeight)),
    100vh
  );
  height: var(--height);

  /* y starting from the opposite edge */
  --northY: calc(var(--height) - var(--northHeight));
  --southY: calc(var(--height) - var(--southHeight));

  /* widths */
  --northSouthWidth: max(var(--hereWidth), var(--column));
  --westWidth: calc(var(--w) * var(--west-columns));
  --nearWestWidth: calc(
    var(--h) * var(--nearWest-columns) + var(--nearWest-screens) * 100vw
  );
  --hereWidth: calc(
    var(--h) * var(--center-columns) + var(--center-screens) * 100vw
  );
  --nearEastWidth: calc(
    var(--h) * var(--nearEast-columns) + var(--nearEast-screens) * 100vw
  );
  --eastWidth: calc(var(--w) * var(--east-columns));
  --width: max(
    calc(
      var(--westWidth) + var(--nearWestWidth) + var(--hereWidth) +
        var(--nearEastWidth) + var(--eastWidth)
    ),
    var(--northSouthWidth)
  );
  width: var(--width);
  position: relative;
  margin: auto;
  /* x starting from the right edge */
  --northSouthX: calc(
    var(--hereL) - var(--northSouthWidth) / 2 + var(--hereWidth) / 2
  );
  --westX: calc(var(--width) - var(--westWidth));
  --nearWestX: calc(var(--westX) - var(--nearWestWidth));
  --eastX: calc(var(--width) - var(--eastWidth));
  --nearEastX: calc(var(--eastX) - var(--nearEastWidth));
  /* relative positions from left */
  --hereL: calc(var(--westWidth) + var(--nearWestWidth));
  /* relative positions from right */
  --hereR: calc(var(--eastWidth) + var(--nearEastWidth));
  /* relative positions from top and bottom are northHeight and southHeight respectively. */
  --hereT: calc(var(--southHeight) + var(--hereHeight));
  --hereB: calc(var(--northHeight) + var(--hereHeight));
  /* Midpoint */
  --midX: calc(var(--hereL) + calc(var(--hereWidth) / 2));
  --midY: calc(var(--northY) + calc(var(--hereHeight) / 2));
  /* Mitigate list style */
  list-style: none;
  padding: 0;
}

/* =======================================================================================
*  Default Layout: Absolutely position the segments per region, via offsset, on the screen
*  =======================================================================================
*/

.nearWest {
  height: var(--w);
  top: auto;
  bottom: calc(var(--nearWestY) + var(--w) * var(--offset));
  right: calc(var(--eastWidth));
}

/* North and South */
.north.🁣 {
  left: var(--northSouthX);
  width: var(--northSouthWidth);
  bottom: calc(var(--northY) + var(--offset) * var(--w));
}

.south.🁣 {
  left: var(--northSouthX);
  width: var(--northSouthWidth);
  top: calc(var(--southY) + var(--offset) * var(--w));
}

/* West and East */
.west.🀱 {
  top: var(--northHeight);
  right: calc(var(--westX) + var(--offset) * var(--w));
}

.east.🀱 {
  top: var(--northHeight);
  left: calc(var(--eastX) + var(--offset) * var(--w));
}

/* The Center */

.nearWest {
  top: var(--northHeight);
  right: calc(var(--nearWestX) + var(--offset) * var(--h));
}

.here {
  top: var(--northHeight);
  left: calc(var(--hereL) + var(--offset) * var(--h));
}

.nearEast {
  top: var(--northHeight);
  left: calc(var(--nearEastX) + var(--offset) * var(--h));
}

/* ===========================================================================================
*  change layout when focus is horizontally subdivided and no segment in the center has a body
*  ===========================================================================================
*/
.Accordion.a-🀱:not(.a-hasBody) {
  --nearWestWidth: calc(var(--w) * var(--nearWest-columns));
  --nearEastWidth: calc(var(--w) * var(--nearEast-columns));
  --width: max(
    calc(
      var(--westWidth) + var(--nearWestWidth) + var(--hereWidth) +
        var(--nearEastWidth) + var(--eastWidth)
    ),
    var(--northSouthWidth)
  );
  width: var(--width);
}

/* rotated text */
.🪗🀱:not(.🪗hasBody) .nearEast.🀱,
.🪗🀱:not(.🪗hasBody) .nearWest.🀱 {
  writing-mode: vertical-rl;
}
.🪗🀱:not(.🪗hasBody) > .nearWest {
  top: var(--northHeight);
  right: calc(var(--nearWestX) + var(--offset) * var(--w));
}

.🪗🀱:not(.🪗hasBody) > .nearEast {
  top: var(--northHeight);
  left: calc(var(--nearEastX) + var(--offset) * var(--w));
}

/* =================================================
*  change layout when focus is vertically subdivided 
*  =================================================
*/
.🪗🁣 {
  --nearWestWidth: 0rem;
  --nearEastWidth: 0rem;
  --nearWestHeight: calc(var(--w) * var(--nearWest-columns));
  --nearEastHeight: calc(var(--w) * var(--nearEast-columns));
  --nearWestY: calc(var(--northY) - var(--nearWestHeight));
  --nearEastY: calc(var(--southY) - var(--nearEastHeight));
}

.🪗🁣 > .nearWest {
  height: var(--w);
  bottom: calc(var(--nearWestY) + var(--w) * var(--offset));
  left: calc(var(--westWidth));
}

.🪗🁣 > .nearEast {
  height: var(--w);
  top: calc(var(--nearEastY) + var(--w) * var(--offset));
  left: calc(var(--westWidth));
}

.🪗🁣 > .here {
  height: var(--w);
  top: calc(var(--northHeight) + var(--nearWestHeight));
}
