:root {
    /* Size of a click target: 7-10mm */
    --unit: 3rem;

    /* Width of a column: 55-70mm (rems shrink to fit 7 units into any screenwidth) */
    --column: calc(var(--unit) * 7);

    /* Width of a screen-wide segment */
    --screen: 100vw;

    /* Height of the `here` part of the screen */
    --fit-height: calc(100vh - 6rem - var(--padding) * 2);

    /* How much the segments can bleed behind each other */
    --bleed: calc(var(--unit) / 6);

    /* spacing around top and bottom of the accordion */

    --padding: 2rem;
}


.Accordion {
    /* Cumulative measures */
    --west-width: calc(var(--west-units) * var(--unit));
    --east-width: calc(var(--east-units) * var(--unit));
    --north-height: calc(var(--north-units) * var(--unit));
    --south-height: calc(var(--south-units) * var(--unit));
    --info-height: calc(var(--north-infoLines) * var(--unit));

    /* Cross stroke-widths */

    &.focusHasBody {
        --here-width: calc(var(--center-columns) * var(--column) + var(--center-screens) * var(--screen));
    }

    &:not(.focusHasBody) {
        --here-width: var(--column);

        &.🪗🁣 {
            --center-height: calc(var(--unit) * var(--center-infoLines) + var(--unit));
        }

        &.🪗🀱 {
            --center-height: var(--here-height);
        }
    }

    &.🪗🁣 {

        /* Aisles stack headers */
        --nearWest-height: calc(var(--nearWest-units) * var(--unit));
        --nearEast-height: calc(var(--nearEast-units) * var(--unit));
    }

    /* Total extents */
    width: var(--width);
    height: var(--height);

    &.focusIsBackground {
        --here-height: var(--column);
        // --x: calc(50vw - var(--column) / 2);
        --x: 0;
        --y: calc(50vh - var(--column) / 2);
        --width: 100vw;
        --height: calc(100vh - var(--padding) * 2);

        /* Aisles are collapsed to their headers */
        --nearWest-width: calc(var(--nearWest-units) * var(--unit));
        --nearEast-width: calc(var(--nearEast-units) * var(--unit));
    }

    &:not(.focusIsBackground) {
        --here-height: max(var(--column), calc(var(--fit-height) - var(--info-height)));

        &.🪗🁣 {
            --x: calc(var(--west-width) + var(--here-width) / 2 - var(--column) / 2);
            --y: calc(var(--north-height) + var(--nearWest-height));
            --width: calc(var(--west-width) + var(--here-width) + var(--east-width));
            --height: calc(var(--north-height) + var(--nearWest-height) + var(--here-height) + var(--nearEast-height) + var(--south-height));


            /* Compress height in main menu-like situation */
            &.focusIsRoot:not(.focusHasBody) {
                --here-height: max(var(--column), calc(100vh - var(--padding) * 2 - var(--north-height) - var(--info-height) - var(--nearEast-height) - var(--nearWest-height) - var(--south-height)));
            }
        }

        &.🪗🀱 {
            --x: calc(var(--west-width) + var(--nearWest-width) + var(--here-width) / 2 - var(--column) / 2);
            --y: calc(var(--north-height));
            --width: calc(var(--west-width) + var(--nearWest-width) + var(--here-width) + var(--nearEast-width) + var(--east-width));
            --height: calc(var(--north-height) + var(--here-height) + var(--south-height));

            /* Aisles expand */
            --nearWest-width: calc(var(--nearWest-headers) * var(--unit) + var(--nearWest-columns) * var(--column) + var(--nearWest-screens) * var(--screen));
            --nearEast-width: calc(var(--nearEast-headers) * var(--unit) + var(--nearEast-columns) * var(--column) + var(--nearEast-screens) * var(--screen));
        }
    }



    /* The extreme regions are tucked to the edges of the accordion */
    >.north {
        left: var(--x);
        top: calc(var(--units) * var(--unit));
        width: var(--column);
        height: var(--unit);
        z-index: 4;
    }

    >.south {
        left: var(--x);
        top: calc(var(--height) - var(--south-height) + var(--units) * var(--unit));
        width: var(--column);
        height: var(--unit);
        z-index: 4;
    }

    >.west {
        left: calc(var(--units) * var(--unit));
        top: var(--y);
        width: var(--unit);
        // height: var(--here-height);
        height: var(--column);
        writing-mode: vertical-rl;
        z-index: 4;
    }

    >.east {
        left: calc(var(--width) - var(--east-width) + var(--units) * var(--unit));
        top: var(--y);
        width: var(--unit);
        // height: var(--here-height);
        height: var(--column);
        writing-mode: vertical-rl;
        z-index: 4;
    }


    &.🪗🁣>.nearWest {
        left: var(--x);
        top: calc(var(--north-height) + var(--units) * var(--unit));
        z-index: 3;
    }

    &.🪗🀱>.nearWest {
        left: calc(var(--west-width) + var(--headers) * var(--unit) + var(--columns) * var(--column) + var(--screens) * var(--screen));
        top: var(--y);
        z-index: 3;

        &:not(.hasBody) {
            height: var(--column);
            writing-mode: vertical-rl;
        }
    }



    &.🪗🁣>.nearEast {
        left: var(--x);
        top: calc(var(--height) - var(--south-height) - var(--nearEast-height) + var(--units) * var(--unit));

        z-index: 3;
    }

    &.🪗🀱>.nearEast {
        left: calc(var(--width) - var(--east-width) - var(--nearEast-width) + var(--headers) * var(--unit) + var(--columns) * var(--column) + var(--screens) * var(--screen));
        top: var(--y);
        z-index: 3;

        &:not(.hasBody) {
            height: var(--column);
            writing-mode: vertical-rl;
        }

    }


    >.center {
        left: var(--x);
    }

    &.focusHasBody>.center {
        top: var(--y);
        height: var(--here-height);
        width: var(--here-width);

    }

    &.focusHasBody.🪗🀱>.center {
        left: calc(var(--west-width) + var(--nearWest-width));

    }

    &.focusIsBackground>.🀱:not(.center),
    &.focusIsBackground>.🁣:not(.center) {
        z-index: 2;
    }

    &.focusIsBackground>.🀱:not(.center):hover,
    &.focusIsBackground>.🁣:not(.center):hover {
        background: black;
    }




    &.focusIsBackground>.center {
        width: 100vw;
        height: 100vh;
        left: 0px;
        top: calc(0px - var(--padding));
        z-index: 1;

        >.body {
            /* fullscreen background:
            - behind content
            - snaps to screen bottom left (so that play button is visible)
            - height is 100vh
            - width is either 16:9 portrait or 16:9 landscape, depending on device orientation
            */
            z-index: 0;
            overflow: visible;
            bottom: 0px;
            position: fixed;
            min-width: 100vw;
            min-height: 100vh;

            @media (orientation:portrait) {
                width: calc(100vh / 16 * 9);
                max-height: 100vh;
            }

            @media (orientation:landscape) {
                width: calc(100vh / 9 * 16);
                max-height: 100vh;
            }

            opacity: 1
        }
    }

    &:not(.focusIsBackground)>.center {
        z-index: 8;
    }

    &:not(.focusHasBody)>.center {


        &.🁣 {
            top: calc(var(--north-height) + var(--nearWest-height));
            height: var(--unit);
            width: var(--column);
        }

        &.🀱 {
            top: var(--y);
            writing-mode: vertical-rl;
            height: var(--center-height);
            width: var(--unit);
        }
    }

    >.peek {
        overflow: hidden;
    }

    &.focusHasBody>.peek {
        left: calc(var(--x) + var(--column) / 2);
        top: calc(var(--y) + var(--here-height) / 2);
        width: 0px;
        height: 0px;
    }



    &.🪗🁣:not(.focusHasBody)>.peek {
        left: var(--west-width);
        top: calc(var(--y) + var(--center-height));
        width: var(--here-width);
        height: calc(var(--here-height) - var(--center-height));
        background: grey;
        border-top: 1px dashed black;
        border-bottom: 1px dashed white;
        box-sizing: border-box;

        img {
            object-fit: cover;
            max-width: max(100vw, 100vh);
            min-width: 100%;
            height: 100%;
        }
    }

    &.🪗🀱:not(.focusHasBody)>.peek {
        left: calc(var(--west-width) + var(--nearWest-width) + var(--unit));
        top: var(--y);
        width: calc(var(--column) - var(--unit));
        height: var(--here-height);
        border-right: 1px dashed white;
        box-sizing: border-box;

        img {
            max-width: 100vw;
            width: auto;
            height: 100%;
        }
    }
}




/* ================================================================================
*                                  Decorative Lines 
*/

.screenBackground {
    width: 100vw;
    height: 100vh;
    outline: 1px dashed black;
    outline-offset: -1.5rem;
    pointer-events: none;
    position: absolute;
    left: calc(var(--west-width) + var(--nearWest-width, 0rem) + var(--here-width) / 2 - 50vw);
    top: calc(var(--north-height) + var(--nearWest-height, 0rem) - var(--info-height) / 2 + var(--here-height) / 2 - 50vh);
    pointer-events: none;
    background: transparent;
}

.aisleBackground {
    width: calc(var(--width) - var(--west-width) - var(--east-width));
    height: calc(var(--height) - var(--north-height) - var(--south-height) + var(--info-height));
    border: 0.5px solid grey;
    border-left: 0.5px solid white;
    border-top: 0.5px solid white;
    box-sizing: border-box;
    pointer-events: none;
    position: absolute;
    left: var(--west-width);
    top: calc(var(--north-height) - var(--info-height));
    background: transparent;
    z-index: 5;
}

.focusIsBackground>.screenBackground {
    left: 0px;
    top: calc(0px - var(--padding));
}


.Accordion {

    /* Mitigate list style */
    list-style: none;
    padding: 0;

    /* Allow absolute positioning */
    position: relative;

    /* Centering */
    margin: auto;
    top: var(--padding);
}

/* Segment Layout */
.body {
    /* crop and provide scrollbars */
    max-height: var(--here-height);
    overflow: auto;
}



/*
===========================================================
*/
.hamburgerMenu,
.hamburgerMenu:link,
.hamburgerMenu:visited {
    position: fixed;
    top: 0;
    right: 0;
    color: white;
    z-index: 4;
    border-radius: 100%;
    padding: .75rem;
    width: 3rem;
    height: 3rem;
    background: rgba(0, 0, 0, .5);
    transition: all .4s;
}

.hamburgerMenu:hover {

    background: white;
    color: black;
    border-top-right-radius: 0;
}

.focusIsRoot>.hamburgerMenu {
    opacity: 0;
    transform: scale(5);
    pointer-events: none;
}


svg {
    color: inherit;
    stroke: rgba(0, 0, 0, .5);
    fill: currentColor;
}