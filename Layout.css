@charset "UTF-8";
:root {
  /* Size of a click target: 7-10mm */
  --unit: 3rem;
  /* Width of a column: 55-70mm (rems shrink to fit 7 units into any screenwidth) */
  --column: calc(var(--unit) * 7);
  /* Width of a screen-wide segment */
  --screen: 100vw;
  /* Height of the `here` part of the screen */
  --fit-height: calc(100vh - 6rem - var(--padding) * 2);
  /* How much the segments can bleed behind each other */
  --bleed: calc(var(--unit) / 3);
  /* spacing around top and bottom of the accordion */
  --padding: 2rem;
}

.Accordion {
  /* Cumulative measures */
  --west-width: calc(var(--west-units) * var(--unit));
  --east-width: calc(var(--east-units) * var(--unit));
  --north-height: calc(var(--north-units) * var(--unit));
  --south-height: calc(var(--south-units) * var(--unit));
  /* Cross stroke-widths */
  /* Total extents */
  width: var(--width);
  height: var(--height);
  /* The extreme regions are tucked to the edges of the accordion */
}
.Accordion.focusHasBody {
  --here-width: calc(var(--center-columns) * var(--column) + var(--center-screens) * var(--screen));
}
.Accordion:not(.focusHasBody) {
  --here-width: var(--column);
}
.Accordion:not(.focusHasBody).🪗🁣 {
  --center-height: calc(var(--unit) * var(--center-infoLines) + var(--unit));
}
.Accordion:not(.focusHasBody).🪗🀱 {
  --center-height: var(--here-height);
}
.Accordion.🪗🁣 {
  /* Aisles stack headers */
  --nearWest-height: calc(var(--nearWest-units) * var(--unit));
  --nearEast-height: calc(var(--nearEast-units) * var(--unit));
}
.Accordion.focusIsBackground {
  --here-height: var(--column);
  --x: 0;
  --y: calc(50vh - var(--column) / 2);
  --width: 100vw;
  --height: calc(100vh - var(--padding) * 2);
  /* Aisles are collapsed to their headers */
  --nearWest-width: calc(var(--nearWest-units) * var(--unit));
  --nearEast-width: calc(var(--nearEast-units) * var(--unit));
}
.Accordion:not(.focusIsBackground) {
  --here-height: var(--fit-height);
}
.Accordion:not(.focusIsBackground).🪗🁣 {
  --x: calc(var(--west-width) + var(--here-width) / 2 - var(--column) / 2);
  --y: calc(var(--north-height) + var(--nearWest-height));
  --width: calc(var(--west-width) + var(--here-width) + var(--east-width));
  --height: calc(var(--north-height) + var(--nearWest-height) + var(--here-height) + var(--nearEast-height) + var(--south-height));
  /* Compress height in main menu-like situation */
}
.Accordion:not(.focusIsBackground).🪗🁣:not(.focusHasBody) {
  --here-height: calc(100vh - var(--padding) * 2 - var(--north-height) - var(--nearEast-height) - var(--nearWest-height) - var(--south-height));
}
.Accordion:not(.focusIsBackground).🪗🀱 {
  --x: calc(var(--west-width) + var(--nearWest-width) + var(--here-width) / 2 - var(--column) / 2);
  --y: calc(var(--north-height));
  --width: calc(var(--west-width) + var(--nearWest-width) + var(--here-width) + var(--nearEast-width) + var(--east-width));
  --height: calc(var(--north-height) + var(--here-height) + var(--south-height));
  /* Aisles expand */
  --nearWest-width: calc(var(--nearWest-headers) * var(--unit) + var(--nearWest-columns) * var(--column) + var(--nearWest-screens) * var(--screen));
  --nearEast-width: calc(var(--nearEast-headers) * var(--unit) + var(--nearEast-columns) * var(--column) + var(--nearEast-screens) * var(--screen));
}
.Accordion > .north {
  left: var(--x);
  top: calc(var(--units) * var(--unit));
  width: var(--column);
  height: var(--unit);
}
.Accordion > .south {
  left: var(--x);
  top: calc(var(--height) - var(--south-height) + var(--units) * var(--unit));
  width: var(--column);
  height: var(--unit);
}
.Accordion > .west {
  left: calc(var(--units) * var(--unit));
  top: var(--y);
  width: var(--unit);
  height: var(--column);
  -ms-writing-mode: tb-rl;
      writing-mode: vertical-rl;
}
.Accordion > .east {
  left: calc(var(--width) - var(--east-width) + var(--units) * var(--unit));
  top: var(--y);
  width: var(--unit);
  height: var(--column);
  -ms-writing-mode: tb-rl;
      writing-mode: vertical-rl;
}
.Accordion.🪗🁣 > .nearWest {
  left: var(--x);
  top: calc(var(--north-height) + var(--units) * var(--unit));
}
.Accordion.🪗🀱 > .nearWest {
  left: calc(var(--west-width) + var(--headers) * var(--unit) + var(--columns) * var(--column) + var(--screens) * var(--screen));
  top: var(--y);
}
.Accordion.🪗🀱 > .nearWest:not(.hasBody) {
  height: var(--column);
  -ms-writing-mode: tb-rl;
      writing-mode: vertical-rl;
}
.Accordion.🪗🁣 > .nearEast {
  left: var(--x);
  top: calc(var(--height) - var(--south-height) - var(--nearEast-height) + var(--units) * var(--unit));
}
.Accordion.🪗🀱 > .nearEast {
  left: calc(var(--width) - var(--east-width) - var(--nearEast-width) + var(--headers) * var(--unit) + var(--columns) * var(--column) + var(--screens) * var(--screen));
  top: var(--y);
}
.Accordion.🪗🀱 > .nearEast:not(.hasBody) {
  height: var(--column);
  -ms-writing-mode: tb-rl;
      writing-mode: vertical-rl;
}
.Accordion > .center {
  left: var(--x);
}
.Accordion.focusHasBody > .center {
  top: var(--y);
  height: var(--here-height);
  width: var(--here-width);
}
.Accordion.focusHasBody.🪗🀱 > .center {
  left: calc(var(--west-width) + var(--nearWest-width));
}
.Accordion.focusIsBackground > .🀱, .Accordion.focusIsBackground > .🁣 {
  z-index: 2;
}
.Accordion.focusIsBackground > .center {
  width: 100vw;
  height: 100vh;
  left: 0px;
  top: calc(0px - var(--padding));
  z-index: 1;
}
.Accordion.focusIsBackground > .center > .body {
  /* fullscreen background:
  - behind content
  - snaps to screen bottom left (so that play button is visible)
  - height is 100vh
  - width is either 16:9 portrait or 16:9 landscape, depending on device orientation
  */
  z-index: 0;
  overflow: visible;
  bottom: 0px;
  position: fixed;
  min-width: 100vw;
  min-height: 100vh;
  opacity: 1;
}
@media (orientation: portrait) {
  .Accordion.focusIsBackground > .center > .body {
    width: 56.25vh;
    max-height: 100vh;
  }
}
@media (orientation: landscape) {
  .Accordion.focusIsBackground > .center > .body {
    width: 177.7777777778vh;
    max-height: 100vh;
  }
}
.Accordion:not(.focusHasBody) > .center.🁣 {
  top: calc(var(--north-height) + var(--nearWest-height));
  height: var(--unit);
  width: var(--column);
}
.Accordion:not(.focusHasBody) > .center.🀱 {
  top: var(--y);
  -ms-writing-mode: tb-rl;
      writing-mode: vertical-rl;
  height: var(--center-height);
  width: var(--unit);
}
.Accordion > .peek {
  overflow: hidden;
}
.Accordion.focusHasBody > .peek {
  left: calc(var(--x) + var(--column) / 2);
  top: calc(var(--y) + var(--here-height) / 2);
  width: 0px;
  height: 0px;
}
.Accordion.🪗🁣:not(.focusHasBody) > .peek {
  left: var(--west-width);
  top: calc(var(--y) + var(--center-height));
  width: var(--here-width);
  height: calc(var(--here-height) - var(--center-height));
  background: grey;
  border-top: 1px dashed white;
  border-bottom: 1px dashed white;
  box-sizing: border-box;
}
.Accordion.🪗🀱:not(.focusHasBody) > .peek {
  left: calc(var(--west-width) + var(--nearWest-width) + var(--unit));
  top: var(--y);
  width: calc(var(--column) - var(--unit));
  height: var(--here-height);
  border-left: 1px dashed white;
  border-right: 1px dashed white;
  box-sizing: border-box;
}

/* ================================================================================
*                                  Decorative Lines 
*/
.screenBackground {
  width: 100vw;
  height: 100vh;
  outline: 0.5px dashed rgba(44, 255, 99, 0.5);
  outline-offset: -1.5rem;
  pointer-events: none;
  position: absolute;
  left: calc(var(--west-width) + var(--nearWest-width, 0rem) + var(--here-width) / 2 - 50vw);
  top: calc(var(--north-height) + var(--nearWest-height, 0rem) + var(--here-height) / 2 - 50vh);
  pointer-events: none;
  background: #222;
}

.focusIsBackground > .screenBackground {
  left: 0px;
  top: calc(0px - var(--padding));
}

.Accordion {
  /* Mitigate list style */
  list-style: none;
  padding: 0;
  /* Allow absolute positioning */
  position: relative;
  /* Centering */
  margin: auto;
  top: var(--padding);
}

/* Segment Layout */
.body {
  max-height: var(--fit-height);
  overflow: auto;
}

/*
===========================================================
*/
.hamburgerMenu,
.hamburgerMenu:link,
.hamburgerMenu:visited {
  position: fixed;
  top: 0;
  right: 0;
  color: white;
  z-index: 3;
  border-radius: 100%;
  padding: 0.75rem;
  width: 3rem;
  height: 3rem;
  background: rgba(0, 0, 0, 0.5);
  border: 0.5px dotted #4f8;
  transition: all 0.4s;
  color: #4f8;
}

.hamburgerMenu:hover {
  background: rgba(255, 255, 255, 0.2);
  border: 1px dotted rgb(0, 26, 255);
}

.focusIsRoot > .hamburgerMenu {
  opacity: 0;
  transform: scale(5);
  pointer-events: none;
}

svg {
  color: inherit;
  stroke: rgba(0, 0, 0, 0.5);
  fill: currentColor;
}/*# sourceMappingURL=Layout.css.map */